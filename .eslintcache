[{"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\index.tsx":"1","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\App.tsx":"2","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Home.tsx":"3","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\Signup.tsx":"4","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\Login.tsx":"5","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\AuthContext.tsx":"6","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\PrivateRoute.tsx":"7","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\Firebase.tsx":"8","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\SideNav\\Sidebar.tsx":"9","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Nova\\NovaHome.tsx":"10","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Vone\\VoneHome.tsx":"11","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\SideNav\\SidebarData.tsx":"12","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\Logout.tsx":"13","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Nova\\DisplayInk.tsx":"14","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Nova\\DisplaySubs.tsx":"15","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Buttons\\action.ts":"16","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Vone\\inkFormVone.tsx":"17","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\index.ts":"18","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Vone\\download.ts":"19"},{"size":255,"mtime":1612811618969,"results":"20","hashOfConfig":"21"},{"size":1074,"mtime":1613924379761,"results":"22","hashOfConfig":"21"},{"size":1374,"mtime":1614265450528,"results":"23","hashOfConfig":"21"},{"size":2484,"mtime":1614214121861,"results":"24","hashOfConfig":"21"},{"size":2946,"mtime":1614539059489,"results":"25","hashOfConfig":"21"},{"size":1287,"mtime":1614535697978,"results":"26","hashOfConfig":"21"},{"size":529,"mtime":1612723290861,"results":"27","hashOfConfig":"21"},{"size":1027,"mtime":1615139193659,"results":"28","hashOfConfig":"21"},{"size":759,"mtime":1613928692222,"results":"29","hashOfConfig":"21"},{"size":3067,"mtime":1618235052053,"results":"30","hashOfConfig":"21"},{"size":3096,"mtime":1618235140393,"results":"31","hashOfConfig":"21"},{"size":533,"mtime":1614214198727,"results":"32","hashOfConfig":"21"},{"size":560,"mtime":1612803782336,"results":"33","hashOfConfig":"21"},{"size":174,"mtime":1612816633783,"results":"34","hashOfConfig":"21"},{"size":188,"mtime":1612817532633,"results":"35","hashOfConfig":"21"},{"size":2550,"mtime":1618281586570,"results":"36","hashOfConfig":"21"},{"size":2546,"mtime":1617896197810,"results":"37","hashOfConfig":"21"},{"size":50,"mtime":1615418432320,"results":"38","hashOfConfig":"21"},{"size":284,"mtime":1612723493952,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"tu8pg0",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"42"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"42"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"42"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\index.tsx",[],["83","84"],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\App.tsx",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Home.tsx",["85","86","87","88"],"import React from \"react\";\r\nimport \"./Home.css\";\r\nimport { useState } from \"react\";\r\nimport NovaHome from \"./Forms/Nova/NovaHome\";\r\nimport VoneHome from \"./Forms/Vone/VoneHome\";\r\nimport Sidebar from \"./SideNav/Sidebar\";\r\nconst Home: React.FC = () => {\r\n  const [selected, setSelected] = useState(false);\r\n  const [nova, setNova] = useState(false);\r\n  const [vone, setVone] = useState(false);\r\n  const handleOnclick = (Type: string) => (\r\n    e: React.MouseEvent<HTMLAnchorElement, MouseEvent>\r\n  ) => {\r\n    console.log(Type);\r\n    setSelected(true);\r\n    if (Type === \"Nova\") {\r\n      setNova(true);\r\n    } else {\r\n      setVone(true);\r\n    }\r\n  };\r\n  const BacktoPlatform = () => {\r\n    setSelected(false);\r\n    setNova(false);\r\n    setVone(false);\r\n  };\r\n  return (\r\n    <div className=\"grid-container\">\r\n      <Sidebar />\r\n      <div className=\"Back\">\r\n        <a onClick={BacktoPlatform}>{\"<<Back\"}</a>\r\n      </div>\r\n      {!selected ? (\r\n        <div className=\"Main\">\r\n          <h2 className=\"Title\">Select Platform</h2>\r\n          <div className=\"Body\" style={{ minHeight: \"50vh\" }}>\r\n            <a onClick={handleOnclick(\"Vone\")}>Vone</a>\r\n            <a onClick={handleOnclick(\"Nova\")}>Nova</a>\r\n          </div>\r\n        </div>\r\n      ) : nova ? (\r\n        <NovaHome />\r\n      ) : (\r\n        <VoneHome />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\Signup.tsx",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\Login.tsx",["89"],"import React from \"react\";\r\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useRef, useState } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"./AuthContext\";\r\n\r\nconst googlelogo =\r\n  \"https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Google_%22G%22_Logo.svg/512px-Google_%22G%22_Logo.svg.png\";\r\ninterface FormData {\r\n  email: any;\r\n  password: any;\r\n}\r\n\r\nconst Login: React.FC = () => {\r\n  const { handleSubmit } = useForm<FormData>();\r\n  const emailRef = useRef<HTMLInputElement>(null);\r\n  const passwordRef = useRef<HTMLInputElement>(null);\r\n  const [error, setError] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const { login, googlelogin }: any = useAuth();\r\n  const history = useHistory();\r\n\r\n  async function onSubmit() {\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await login(emailRef.current?.value, passwordRef.current?.value);\r\n    } catch {\r\n      setError(\"Failed to log in\");\r\n    }\r\n    setLoading(false);\r\n    history.push(\"/\");\r\n  }\r\n  async function loginwithGoogle() {\r\n    try {\r\n      setError(\"\");\r\n      setLoading(true);\r\n      await googlelogin();\r\n    } catch {\r\n      setError(\"Failed to log in\");\r\n    }\r\n    setLoading(false);\r\n    history.push(\"/\");\r\n  }\r\n  return (\r\n    <Card style={{ width: \"25rem\" }}>\r\n      <Card.Body>\r\n        <h2 className=\"text-center mb-4\">Log In</h2>\r\n        {error && <Alert variant=\"danger\">{error}</Alert>}\r\n        <Form onSubmit={handleSubmit(onSubmit)}>\r\n          <div>\r\n            <Form.Group className=\"align-center\">\r\n              <Button\r\n                className=\"align-center\"\r\n                variant=\"outline-primary\"\r\n                onClick={loginwithGoogle}\r\n                block\r\n              >\r\n                <img\r\n                  className=\"align-left\"\r\n                  width=\"20px\"\r\n                  height=\"18px\"\r\n                  src={googlelogo}\r\n                />\r\n                Sign In with Google\r\n              </Button>\r\n            </Form.Group>\r\n            <div className=\"text-center\">or</div>\r\n            <Form.Group id=\"email\">\r\n              <Form.Label>Email</Form.Label>\r\n              <Form.Control type=\"email\" ref={emailRef} />\r\n            </Form.Group>\r\n            <Form.Group id=\"password\">\r\n              <Form.Label>Password</Form.Label>\r\n              <Form.Control type=\"password\" ref={passwordRef} />\r\n            </Form.Group>\r\n            <Button disabled={loading} className=\"w-100\" type=\"submit\">\r\n              Log In\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n        <div className=\"w-100 text-center mt-3\">Forgot Password?</div>\r\n        <div className=\"w-100 text-center mt-2\">\r\n          Don't have an account?<Link to=\"/signup\">Sign Up</Link>\r\n        </div>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\nexport default Login;\r\n","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\AuthContext.tsx",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\PrivateRoute.tsx",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\Firebase.tsx",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\SideNav\\Sidebar.tsx",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Nova\\NovaHome.tsx",["90","91","92"],"import { useState } from \"react\";\r\nimport { Loadmaterials_Nova } from \"../Buttons/action\";\r\nimport {\r\n  blanktemplate,\r\n  usetemplate,\r\n  updatetemplate,\r\n  deletetemplate,\r\n} from \"../Buttons/action\";\r\nconst initialTemplate = {\r\n  inktype: \"\",\r\n  name: \"\",\r\n  pass_spacing: 0,\r\n  dispense_height: 0,\r\n};\r\nconst NovaHome: React.FC = () => {\r\n  const [istemplateavailable, setTemplateAvailable] = useState(false);\r\n  const [istemplateSelected, setTemplateSelected] = useState(false);\r\n  const [template, setTemplate] = useState(initialTemplate);\r\n  const [details, setDetails] = useState(\"\");\r\n\r\n  const handleOnselect = (inkname: any) => {\r\n    if (!istemplateSelected && details !== inkname) {\r\n      setDetails(inkname);\r\n      setTemplateSelected(true);\r\n    }\r\n    if (istemplateSelected && details === inkname) {\r\n      setDetails(\"\");\r\n      setTemplateSelected(false);\r\n    }\r\n    if (istemplateSelected && details !== inkname) {\r\n      setDetails(inkname);\r\n      setTemplateSelected(true);\r\n    } else {\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"Main\">\r\n      {!istemplateavailable ? (\r\n        <div>\r\n          <h2 className=\"Title\">Select Material</h2>\r\n          <ul>\r\n            {Loadmaterials_Nova().data.map((val, key) => {\r\n              return (\r\n                <a\r\n                  key={key}\r\n                  className=\"row\"\r\n                  onClick={() => {\r\n                    handleOnselect(val);\r\n                  }}\r\n                >\r\n                  <div id=\"name\">{val}</div>\r\n                </a>\r\n              );\r\n            })}\r\n          </ul>\r\n\r\n          <div\r\n            className=\"d-flex align-items-center justify-content-center\"\r\n            style={{ minHeight: \"100vh\" }}\r\n          >\r\n            {/* reuse action buttons from vone */}\r\n            <button\r\n              className=\"button\"\r\n              onClick={() => {\r\n                blanktemplate();\r\n              }}\r\n            >\r\n              Blank Template\r\n            </button>\r\n            <button\r\n              disabled={!istemplateSelected}\r\n              className=\"button\"\r\n              onClick={() => {\r\n                usetemplate(details);\r\n              }}\r\n            >\r\n              Use as Template\r\n            </button>\r\n            <button\r\n              disabled={!istemplateSelected}\r\n              className=\"button\"\r\n              onClick={() => {\r\n                updatetemplate(details);\r\n              }}\r\n            >\r\n              Update\r\n            </button>\r\n            <button\r\n              disabled={!istemplateSelected}\r\n              className=\"button\"\r\n              onClick={() => {\r\n                deletetemplate(details);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <button onClick={() => setTemplateAvailable(false)}>\r\n            Back to Templates\r\n          </button>\r\n          {/* <Form {...template}> </Form> */}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NovaHome;\r\n","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Vone\\VoneHome.tsx",["93","94"],"import Form from \"./inkFormVone\";\r\nimport { useState } from \"react\";\r\nimport { Loadmaterials_Vone } from \"../Buttons/action\";\r\nimport {\r\n  blanktemplate,\r\n  usetemplate,\r\n  updatetemplate,\r\n  deletetemplate,\r\n} from \"../Buttons/action\";\r\nconst initialTemplate = {\r\n  inktype: \"\",\r\n  name: \"\",\r\n  pass_spacing: 0,\r\n  dispense_height: 0,\r\n};\r\n\r\nconst VoneHome: React.FC = () => {\r\n  const [istemplateavailable, setTemplateAvailable] = useState(false);\r\n  const [istemplateSelected, setTemplateSelected] = useState(false);\r\n  const [template, setTemplate] = useState(initialTemplate);\r\n  const [details, setDetails] = useState(\"\");\r\n\r\n  const handleOnselect = (inkname: any) => {\r\n    if (!istemplateSelected && details !== inkname) {\r\n      setDetails(inkname);\r\n      setTemplateSelected(true);\r\n    }\r\n    if (istemplateSelected && details === inkname) {\r\n      setDetails(\"\");\r\n      setTemplateSelected(false);\r\n    }\r\n    if (istemplateSelected && details !== inkname) {\r\n      setDetails(inkname);\r\n      setTemplateSelected(true);\r\n    } else {\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"Main\">\r\n      {!istemplateavailable ? (\r\n        <div>\r\n          <h2 className=\"Title\">Select Material</h2>\r\n          <ul>\r\n            {Loadmaterials_Vone().data.map((val, key) => {\r\n              return (\r\n                <a\r\n                  key={key}\r\n                  className=\"row\"\r\n                  onClick={() => {\r\n                    handleOnselect(val);\r\n                  }}\r\n                >\r\n                  <div id=\"name\">{val}</div>\r\n                </a>\r\n              );\r\n            })}\r\n          </ul>\r\n\r\n          <div\r\n            className=\"d-flex align-items-center justify-content-center\"\r\n            style={{ minHeight: \"100vh\" }}\r\n          >\r\n            {/* reuse action buttons from vone */}\r\n            <button\r\n              className=\"button\"\r\n              onClick={() => {\r\n                blanktemplate();\r\n              }}\r\n            >\r\n              Blank Template\r\n            </button>\r\n            <button\r\n              disabled={!istemplateSelected}\r\n              className=\"button\"\r\n              onClick={() => {\r\n                usetemplate(details);\r\n              }}\r\n            >\r\n              Use as Template\r\n            </button>\r\n            <button\r\n              disabled={!istemplateSelected}\r\n              className=\"button\"\r\n              onClick={() => {\r\n                updatetemplate(details);\r\n              }}\r\n            >\r\n              Update\r\n            </button>\r\n            <button\r\n              disabled={!istemplateSelected}\r\n              className=\"button\"\r\n              onClick={() => {\r\n                deletetemplate(details);\r\n              }}\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <button onClick={() => setTemplateAvailable(false)}>\r\n            Back to Templates\r\n          </button>\r\n          <Form {...template}> </Form>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VoneHome;\r\n","C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\SideNav\\SidebarData.tsx",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Authentication\\Logout.tsx",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Nova\\DisplayInk.tsx",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Nova\\DisplaySubs.tsx",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Buttons\\action.ts",["95","96","97","98","99","100"],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Vone\\inkFormVone.tsx",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\index.ts",[],"C:\\Users\\Tome\\Desktop\\Work Stuff\\vone-materials-tool\\src\\Components\\Forms\\Vone\\download.ts",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":10,"column":10,"nodeType":"107","messageId":"108","endLine":10,"endColumn":14},{"ruleId":"109","severity":1,"message":"110","line":31,"column":9,"nodeType":"111","endLine":31,"endColumn":37},{"ruleId":"109","severity":1,"message":"110","line":37,"column":13,"nodeType":"111","endLine":37,"endColumn":48},{"ruleId":"109","severity":1,"message":"110","line":38,"column":13,"nodeType":"111","endLine":38,"endColumn":48},{"ruleId":"112","severity":1,"message":"113","line":60,"column":17,"nodeType":"111","endLine":65,"endColumn":19},{"ruleId":"105","severity":1,"message":"114","line":18,"column":10,"nodeType":"107","messageId":"108","endLine":18,"endColumn":18},{"ruleId":"105","severity":1,"message":"115","line":18,"column":20,"nodeType":"107","messageId":"108","endLine":18,"endColumn":31},{"ruleId":"109","severity":1,"message":"110","line":44,"column":17,"nodeType":"111","endLine":50,"endColumn":18},{"ruleId":"105","severity":1,"message":"115","line":20,"column":20,"nodeType":"107","messageId":"108","endLine":20,"endColumn":31},{"ruleId":"109","severity":1,"message":"110","line":46,"column":17,"nodeType":"111","endLine":52,"endColumn":18},{"ruleId":"105","severity":1,"message":"116","line":3,"column":20,"nodeType":"107","messageId":"108","endLine":3,"endColumn":41},{"ruleId":"105","severity":1,"message":"117","line":4,"column":15,"nodeType":"107","messageId":"108","endLine":4,"endColumn":27},{"ruleId":"105","severity":1,"message":"118","line":7,"column":3,"nodeType":"107","messageId":"108","endLine":7,"endColumn":14},{"ruleId":"119","severity":1,"message":"120","line":54,"column":6,"nodeType":"121","endLine":54,"endColumn":8,"suggestions":"122"},{"ruleId":"105","severity":1,"message":"123","line":59,"column":16,"nodeType":"107","messageId":"108","endLine":59,"endColumn":27},{"ruleId":"105","severity":1,"message":"124","line":78,"column":16,"nodeType":"107","messageId":"108","endLine":78,"endColumn":23},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"@typescript-eslint/no-unused-vars","'vone' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'template' is assigned a value but never used.","'setTemplate' is assigned a value but never used.","'getLatestDatabaseInfo' is defined but never used.","'DatabaseInfo' is defined but never used.","'UseTemplate' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'VoneCollection' and 'data'. Either include them or remove the dependency array.","ArrayExpression",["127"],"'getVoneinfo' is defined but never used.","'setData' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},"Update the dependencies array to be: [VoneCollection, data]",{"range":"130","text":"131"},[1453,1455],"[VoneCollection, data]"]